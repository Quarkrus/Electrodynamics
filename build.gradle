buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = "https://modmaven.dev" }
   		maven { url = "https://dvs1.progwml6.com/files/maven/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath 'org.ajoberstar:gradle-git:0.6.1'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version '1.4.0'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'

libsDirName = "../output"
distsDirName = "../output"

def	version_minor="5"
def	version_revision='1'
def	minecraft_version='1.16.5'
def	version_build='0'
def	version_major='0'

version = minecraft_version+'-'+version_major+'.'+version_minor+'.'+version_revision+'-'+version_build
group = 'electrodynamics' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'Electrodynamics'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'
    //mappings channel: 'parchment', version: '2022.03.06-1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                electrodynamics {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                electrodynamics {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'electrodynamics', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                electrodynamics {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "electrodynamics.refmap.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
	minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'
    compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.153:api")
  	runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.153")

    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}


// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "electrodynamics",
            "Specification-Vendor": "aurilisdev",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"aurilisdev",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar') 

task sourcesJar(type: Jar, dependsOn: classes) {
	from sourceSets.main.allSource
	classifier = 'sources'
}
task deobfJar(type: Jar) {
	from sourceSets.main.output
	classifier = 'deobf'
}

artifacts {
	archives sourcesJar
	archives deobfJar
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

/*
This needs to stay. It's the Maven repository for JEI along with a fallback!
*/
repositories{
	mavenCentral()
	maven {
	    // location of the maven that hosts JEI files since January 2023
	    name = "Jared's maven"
	    url = "https://maven.blamejared.com/"
	}
	maven {
   		// location of a maven mirror for JEI files, as a fallback
    	name = "ModMaven"
    	url = "https://modmaven.dev"
  	}
}

tasks.curseforge.dependsOn jar

curseforge {
  apiKey = System.getenv("CURSEFORGE_KEY")
  project {
    id = '405322'
    changelog = 'You can find changelog at: https://aurilis.dev/'
    releaseType = 'release'
    addGameVersion minecraft_version

    mainArtifact(jar) {
      relations {
        requiredDependency 'electrodynamics'
      }
      displayName=project.name+' ' + project.version
    }
  }
}
